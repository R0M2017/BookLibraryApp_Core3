// <auto-generated />
using System;
using BookLibraryApp.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BookLibraryApp.Migrations
{
    [DbContext(typeof(BookLibraryContext))]
    [Migration("20200528001047_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("BookLibraryApp.Models.Accounts", b =>
                {
                    b.Property<int>("AccountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("account-ID")
                        .HasColumnType("int");

                    b.Property<DateTime>("Datecreated")
                        .HasColumnName("datecreated")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("Dateofbirth")
                        .HasColumnName("dateofbirth")
                        .HasColumnType("date");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnName("email")
                        .HasColumnType("varchar(255)")
                        .HasAnnotation("MySql:CharSet", "utf8mb4")
                        .HasAnnotation("MySql:Collation", "utf8mb4_0900_ai_ci");

                    b.Property<string>("Firstname")
                        .IsRequired()
                        .HasColumnName("firstname")
                        .HasColumnType("varchar(255)")
                        .HasAnnotation("MySql:CharSet", "utf8mb4")
                        .HasAnnotation("MySql:Collation", "utf8mb4_0900_ai_ci");

                    b.Property<string>("Lastname")
                        .IsRequired()
                        .HasColumnName("lastname")
                        .HasColumnType("varchar(255)")
                        .HasAnnotation("MySql:CharSet", "utf8mb4")
                        .HasAnnotation("MySql:Collation", "utf8mb4_0900_ai_ci");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnName("password")
                        .HasColumnType("varchar(40)")
                        .HasAnnotation("MySql:CharSet", "utf8mb4")
                        .HasAnnotation("MySql:Collation", "utf8mb4_0900_ai_ci");

                    b.Property<string>("Phonenumber")
                        .HasColumnName("phonenumber")
                        .HasColumnType("varchar(15)")
                        .HasAnnotation("MySql:CharSet", "utf8mb4")
                        .HasAnnotation("MySql:Collation", "utf8mb4_0900_ai_ci");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnName("role-id")
                        .HasColumnType("varchar(10)")
                        .HasAnnotation("MySql:CharSet", "utf8mb4")
                        .HasAnnotation("MySql:Collation", "utf8mb4_0900_ai_ci");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnName("username")
                        .HasColumnType("varchar(100)")
                        .HasAnnotation("MySql:CharSet", "utf8mb4")
                        .HasAnnotation("MySql:Collation", "utf8mb4_0900_ai_ci");

                    b.HasKey("AccountId")
                        .HasName("PRIMARY");

                    b.HasIndex("RoleId")
                        .HasName("role-id");

                    b.ToTable("accounts");
                });

            modelBuilder.Entity("BookLibraryApp.Models.Bookratings", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnName("User-ID")
                        .HasColumnType("int");

                    b.Property<string>("Isbn")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ISBN")
                        .HasColumnType("varchar(13)")
                        .HasDefaultValueSql("''")
                        .HasAnnotation("MySql:CharSet", "utf8mb4")
                        .HasAnnotation("MySql:Collation", "utf8mb4_0900_ai_ci");

                    b.Property<int>("BookRating")
                        .HasColumnName("Book-Rating")
                        .HasColumnType("int");

                    b.HasKey("UserId", "Isbn")
                        .HasName("PRIMARY");

                    b.ToTable("bookratings");
                });

            modelBuilder.Entity("BookLibraryApp.Models.Books", b =>
                {
                    b.Property<int>("BookId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("book-ID")
                        .HasColumnType("int");

                    b.Property<string>("BookAuthor")
                        .HasColumnName("Book-Author")
                        .HasColumnType("varchar(255)")
                        .HasAnnotation("MySql:CharSet", "utf8mb4")
                        .HasAnnotation("MySql:Collation", "utf8mb4_0900_ai_ci");

                    b.Property<string>("BookTitle")
                        .HasColumnName("Book-Title")
                        .HasColumnType("varchar(255)")
                        .HasAnnotation("MySql:CharSet", "utf8mb4")
                        .HasAnnotation("MySql:Collation", "utf8mb4_0900_ai_ci");

                    b.Property<string>("ImageUrlL")
                        .HasColumnName("Image-URL-L")
                        .HasColumnType("varchar(255)")
                        .HasAnnotation("MySql:CharSet", "utf8mb4")
                        .HasAnnotation("MySql:Collation", "utf8mb4_bin");

                    b.Property<string>("ImageUrlM")
                        .HasColumnName("Image-URL-M")
                        .HasColumnType("varchar(255)")
                        .HasAnnotation("MySql:CharSet", "utf8mb4")
                        .HasAnnotation("MySql:Collation", "utf8mb4_bin");

                    b.Property<string>("ImageUrlS")
                        .HasColumnName("Image-URL-S")
                        .HasColumnType("varchar(255)")
                        .HasAnnotation("MySql:CharSet", "utf8mb4")
                        .HasAnnotation("MySql:Collation", "utf8mb4_bin");

                    b.Property<string>("Isbn")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ISBN")
                        .HasColumnType("varchar(13)")
                        .HasDefaultValueSql("''")
                        .HasAnnotation("MySql:CharSet", "utf8mb4")
                        .HasAnnotation("MySql:Collation", "utf8mb4_bin");

                    b.Property<string>("Publisher")
                        .HasColumnType("varchar(255)")
                        .HasAnnotation("MySql:CharSet", "utf8mb4")
                        .HasAnnotation("MySql:Collation", "utf8mb4_0900_ai_ci");

                    b.Property<uint?>("YearOfPublication")
                        .HasColumnName("Year-Of-Publication")
                        .HasColumnType("int unsigned");

                    b.HasKey("BookId")
                        .HasName("PRIMARY");

                    b.ToTable("books");
                });

            modelBuilder.Entity("BookLibraryApp.Models.Efmigrationshistory", b =>
                {
                    b.Property<string>("MigrationId")
                        .HasColumnType("varchar(95)")
                        .HasAnnotation("MySql:CharSet", "utf8mb4")
                        .HasAnnotation("MySql:Collation", "utf8mb4_0900_ai_ci");

                    b.Property<string>("ProductVersion")
                        .IsRequired()
                        .HasColumnType("varchar(32)")
                        .HasAnnotation("MySql:CharSet", "utf8mb4")
                        .HasAnnotation("MySql:Collation", "utf8mb4_0900_ai_ci");

                    b.HasKey("MigrationId")
                        .HasName("PRIMARY");

                    b.ToTable("__efmigrationshistory");
                });

            modelBuilder.Entity("BookLibraryApp.Models.Library", b =>
                {
                    b.Property<int>("LibraryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("library-ID")
                        .HasColumnType("int");

                    b.Property<int>("BookId")
                        .HasColumnName("book-ID")
                        .HasColumnType("int");

                    b.Property<DateTime>("Datecreated")
                        .HasColumnName("datecreated")
                        .HasColumnType("datetime");

                    b.Property<int>("UserId")
                        .HasColumnName("user-ID")
                        .HasColumnType("int");

                    b.HasKey("LibraryId");

                    b.HasIndex("BookId")
                        .HasName("book-ID");

                    b.HasIndex("UserId")
                        .HasName("user-ID");

                    b.ToTable("library");
                });

            modelBuilder.Entity("BookLibraryApp.Models.Roles", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("role-ID")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("name")
                        .HasColumnType("varchar(25)")
                        .HasAnnotation("MySql:CharSet", "utf8mb4")
                        .HasAnnotation("MySql:Collation", "utf8mb4_0900_ai_ci");

                    b.HasKey("RoleId")
                        .HasName("PRIMARY");

                    b.ToTable("roles");
                });

            modelBuilder.Entity("BookLibraryApp.Models.Users", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("User-ID")
                        .HasColumnType("int");

                    b.Property<int?>("Age")
                        .HasColumnType("int");

                    b.Property<string>("Location")
                        .HasColumnType("varchar(250)")
                        .HasAnnotation("MySql:CharSet", "utf8mb4")
                        .HasAnnotation("MySql:Collation", "utf8mb4_0900_ai_ci");

                    b.HasKey("UserId")
                        .HasName("PRIMARY");

                    b.ToTable("users");
                });
#pragma warning restore 612, 618
        }
    }
}
