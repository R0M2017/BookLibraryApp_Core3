
@{
    var s = "Isbn";
}

<div class="container-fluid mt-2">
    <div class="row">
        <div class="col-1">
            <label class="col-form-label">ISBN Search</label>
            <select form="pageform" name="options.searchIsbnname"
                    class="form-control" hidden>
                <option value="@s" selected="@(Model.Options.SearchIsbnName == s)">
                    @(s.IndexOf('.') == -1 ? s : s.Substring(0, s.IndexOf('.')))
                </option>
            </select>
        </div>
        <div class="col-3">
            <input form="pageform" class="form-control" name="options.searchisbnterm" id="options.searchisbn"
                   value="@Model.Options.SearchIsbnTerm" />
        </div>
        <div class="col-2 text-right">
            <button form="pageform" class="btn btn-secondary" type="submit">
                Search ISBN
            </button>
        </div>
        <div class="col-6">
            <div class="row justify-content-center">
                <input type="button" id="btn" class="btn btn-secondary mb-2" value="Start/Stop the scanner" />
            </div>
            <div class="row justify-content-center">
                <style>
                    /* In order to place the tracking correctly */
                    canvas.drawing, canvas.drawingBuffer {
                        position: absolute;
                        left: 0;
                        top: 0;
                    }
                </style>

                <!-- Div to show the scanner -->
                <div id="scanner-container"></div>

                <!-- Include the image-diff library -->
                <script src="~/lib/quagga/quagga.min.js"></script>

                <!-- Include JSON file -->
                <script type="text/javascript" src="~/json/isbnStorage.json"></script>

                <script>
                    var _scannerIsRunning = false;
                    var scannerISBN = new Array();

                    function startScanner() {
                        Quagga.init({
                            inputStream: {
                                name: "Live",
                                type: "LiveStream",
                                target: document.querySelector('#scanner-container'),
                                constraints: {
                                    width: 480,
                                    height: 320,
                                    facingMode: "environment"
                                },
                            },
                            decoder: {
                                readers: [
                                    "ean_reader"
                                ],
                                debug: {
                                    showCanvas: true,
                                    showPatches: true,
                                    showFoundPatches: true,
                                    showSkeleton: true,
                                    showLabels: true,
                                    showPatchLabels: true,
                                    showRemainingPatchLabels: true,
                                    boxFromPatches: {
                                        showTransformed: true,
                                        showTransformedBox: true,
                                        showBB: true
                                    }
                                }
                            },
                        }, (err) => {
                            if (err) {
                                console.log(err);
                                return
                            }
                            console.log("Initialization finished. Ready to start");
                            Quagga.start();
                            // Set flag to is running
                            _scannerIsRunning = true;
                        });
                        Quagga.onProcessed((result) => {
                            var drawingCtx = Quagga.canvas.ctx.overlay,
                                drawingCanvas = Quagga.canvas.dom.overlay;
                            if (result) {
                                if (result.boxes) {
                                    drawingCtx.clearRect(0, 0, parseInt(drawingCanvas.getAttribute("width")), parseInt(drawingCanvas.getAttribute("height")));
                                    result.boxes.filter((box) => {
                                        return box !== result.box;
                                    }).forEach((box) => {
                                        Quagga.ImageDebug.drawPath(box, { x: 0, y: 1 }, drawingCtx, { color: "green", lineWidth: 2 });
                                    });
                                }
                                if (result.box) {
                                    Quagga.ImageDebug.drawPath(result.box, { x: 0, y: 1 }, drawingCtx, { color: "#00F", lineWidth: 2 });
                                }
                                if (result.codeResult && result.codeResult.code) {
                                    Quagga.ImageDebug.drawPath(result.line, { x: 'x', y: 'y' }, drawingCtx, { color: 'red', lineWidth: 3 });
                                }
                            }
                        });
                        Quagga.onDetected((result) => {
                            var isbn = result.codeResult.code;
                            scannerISBN.push(isbn);
                            if (scannerISBN.length == 20) {
                                var modeISBN = mode(scannerISBN);
                                console.log("ISBN: " + modeISBN);
                                //$('#options.isbn').val(modeISBN);
                                document.getElementById("options.searchisbn").value = modeISBN;
                                /*var isbnpar = document.getElementById("options.isbn");
                                var text = document.createTextNode(modeISBN);
                                isbnpar.appendChild(text);*/
                            }
                        });
                    }
                    // Start/stop scanner
                    document.getElementById("btn").addEventListener("click", () => {
                        if (_scannerIsRunning) {
                            Quagga.stop();
                        } else {
                            startScanner();
                        }
                    }, false);

                    function mode(array) {
                        if (array.length == 0)
                            return null;
                        var modeMap = {};
                        var maxEl = array[0], maxCount = 1;
                        for (var i = 0; i < array.length; i++) {
                            var el = array[i];
                            if (modeMap[el] == null)
                                modeMap[el] = 1;
                            else
                                modeMap[el]++;
                            if (modeMap[el] > maxCount) {
                                maxEl = el;
                                maxCount = modeMap[el];
                            }
                        }
                        return maxEl;
                    }
                </script>
            </div>
        </div>
    </div>
</div>